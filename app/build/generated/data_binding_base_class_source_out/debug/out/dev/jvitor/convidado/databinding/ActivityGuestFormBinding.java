// Generated by view binder compiler. Do not edit!
package dev.jvitor.convidado.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dev.jvitor.convidado.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGuestFormBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText editextName;

  @NonNull
  public final RadioButton radiobtnAbsent;

  @NonNull
  public final RadioButton radiobtnPresent;

  @NonNull
  public final RadioGroup radiogroupConfirmation;

  @NonNull
  public final TextView textviewName;

  @NonNull
  public final TextView textviewPresence;

  private ActivityGuestFormBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSave,
      @NonNull EditText editextName, @NonNull RadioButton radiobtnAbsent,
      @NonNull RadioButton radiobtnPresent, @NonNull RadioGroup radiogroupConfirmation,
      @NonNull TextView textviewName, @NonNull TextView textviewPresence) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.editextName = editextName;
    this.radiobtnAbsent = radiobtnAbsent;
    this.radiobtnPresent = radiobtnPresent;
    this.radiogroupConfirmation = radiogroupConfirmation;
    this.textviewName = textviewName;
    this.textviewPresence = textviewPresence;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGuestFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGuestFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_guest_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGuestFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.editextName;
      EditText editextName = ViewBindings.findChildViewById(rootView, id);
      if (editextName == null) {
        break missingId;
      }

      id = R.id.radiobtnAbsent;
      RadioButton radiobtnAbsent = ViewBindings.findChildViewById(rootView, id);
      if (radiobtnAbsent == null) {
        break missingId;
      }

      id = R.id.radiobtnPresent;
      RadioButton radiobtnPresent = ViewBindings.findChildViewById(rootView, id);
      if (radiobtnPresent == null) {
        break missingId;
      }

      id = R.id.radiogroupConfirmation;
      RadioGroup radiogroupConfirmation = ViewBindings.findChildViewById(rootView, id);
      if (radiogroupConfirmation == null) {
        break missingId;
      }

      id = R.id.textviewName;
      TextView textviewName = ViewBindings.findChildViewById(rootView, id);
      if (textviewName == null) {
        break missingId;
      }

      id = R.id.textviewPresence;
      TextView textviewPresence = ViewBindings.findChildViewById(rootView, id);
      if (textviewPresence == null) {
        break missingId;
      }

      return new ActivityGuestFormBinding((ConstraintLayout) rootView, btnSave, editextName,
          radiobtnAbsent, radiobtnPresent, radiogroupConfirmation, textviewName, textviewPresence);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
